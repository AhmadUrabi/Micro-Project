PORTA EQU 78H; LCD DATA PORT
PORTB EQU 79H; LCD CMD PORT
PORTC EQU 7AH; KEYPAD PORT
COMMAND EQU 7BH; 8255 COMMAND PORT

SERIALDATA EQU 80H; 8251 DATA PORT
SERIALCMD EQU 81H; 8251 COMMAND PORT

PROC PRINTCHAR
MOV AL , 01H;
OUT PORTB, AL; SET RS TO 1, SEND DATA
MOV AL,CL;
OUT PORTA, AL; SEND THE CHARACTER TO THE LCD
; SEND TO SERIAL PORT
OUT SERIALDATA, AL;
RET
ENDP PRINTCHAR


; We use the following table to determine the key pressed
; Row 1: 0111
; 1 0111 0111 = 77H
; 2 1011 0111 = B7H
; 3 1101 0111 = D7H
; A 1110 0111 = E7H
; 
; Row 2: 1011
; 4 0111 1011 = 7BH
; 5 1011 1011 = BBH
; 6 1101 1011 = DBH
; B 1110 1011 = EBH
; 
; Row 3: 1101
; 7 0111 1101 = 7DH
; 8 1011 1101 = BDH
; 9 1101 1101 = DDH
; C 1110 1101 = EDH
; 
; Row 4: 1110
; * 0111 1110 = 7EH
; 0 1011 1110 = BEH
; # 1101 1110 = DEH
; D 1110 1110 = EEH
PROC READCHAR
ADD AL,BH; ADD THE ROWS TO THE COLUMNS, WE GET 8 DIFFERENT COMBINATIONS, THEN TEST FOR EACH ONE
CMP AL, 77H;
JNE R1C2;
MOV CL, 31H; We use cl as storage for the character to print
CALL PRINTCHAR 
RET
R1C2:
CMP AL, B7H;
JNE R1C3;
MOV CL, 32H;
CALL PRINTCHAR 
RET
R1C3:
CMP AL, D7H;
JNE R1C4;
MOV CL, 33H;
CALL PRINTCHAR 
RET
R1C4:
CMP AL, E7H;
JNE R2C1;
MOV CL, 41H;
CALL PRINTCHAR 
RET
R2C1:
CMP AL, 7BH;
JNE R2C2;
MOV CL, 34H;
CALL PRINTCHAR 
RET
R2C2:
CMP AL, BBH;
JNE R2C3;
MOV CL, 35H;
CALL PRINTCHAR 
RET
R2C3:
CMP AL, DBH;
JNE R2C4;
MOV CL, 36H;
CALL PRINTCHAR 
RET
R2C4:
CMP AL, EBH;
JNE R3C1;
MOV CL, 42H;
CALL PRINTCHAR 
RET
R3C1:
CMP AL, 7DH;
JNE R3C2;
MOV CL, 37H;
CALL PRINTCHAR 
RET
R3C2:
CMP AL, BDH;
JNE R3C3;
MOV CL, 38H;
CALL PRINTCHAR 
RET
R3C3:
CMP AL, DDH;
JNE R3C4;
MOV CL, 39H;
CALL PRINTCHAR 
RET
R3C4:
CMP AL, EDH;
JNE R4C1;
MOV CL, 43H;
CALL PRINTCHAR 
RET
R4C1:
CMP AL, 7EH;
JNE R4C2;
MOV CL, 2AH;
CALL PRINTCHAR 
RET
R4C2:
CMP AL, BEH;
JNE R4C3;
MOV CL, 30H;
CALL PRINTCHAR 
RET
R4C3:
CMP AL, DEH;
JNE R4C4;
MOV CL, 23H;
CALL PRINTCHAR 
RET
R4C4:
CMP AL, EEH;
JNE endproc;
MOV CL, 44H;
CALL PRINTCHAR 
RET
endproc: ENDP



; INITIALIZE SERIAL PORT
; 1111 1101 = 0xFD
MOV AL, ABH; Random value
OUT SERIALCMD, AL;
MOV AL, 4; Reset
OUT SERIALDATA, AL;
MOV AL, 0FDH;
OUT SERIALCMD, AL;

; INITIALIZE 8255
; 1000 1000 = 0x88
MOV AL, 88H;
OUT COMMAND, AL;

; CLEAR SCREEN
MOV AL, 0;
OUT PORTB, AL;
MOV AL, 01H;
OUT PORTA, AL; CLEAR SCREEN
MOV AL, 38H;
OUT PORTA, AL; 8 BIT MODE
MOV AL, 06H;
OUT PORTA, AL; AUTO INCREMENT 

XOR AX, AX;
XOR BX, BX;
MOV BX, EEH; 1110 1110

READLOOP:
POP BX; RESTORE BX
ROL BX, 1; ROTATE LEFT
PUSH BX; SAVE BX
XOR BL, BL; ZERO OUT BL, ONLY BH NEEDS TO BE SET BECAUSE WE ARE SENDING TO PC7-PC4
OUT PORTC, BH;
IN AL, PORTC; READ FROM PORTC
XOR AH, AH; ZERO OUT AH, THE VALUES IN AH REPRESENT THE ROWS 
CMP AL, 0FH; IF AL = 0FH, THEN THE KEY IS NOT PRESSED
JE READLOOP;
CALL READCHAR;
JMP READLOOP;

